/* All Adafruit Service/Characteristic UUID128 share the same Base UUID:
 *    ADAFxxx-C332-42A8-93BD-25E905756CB8
 *
 * Shared Characteristics
 *  - Measurement Period  0001 | int32_t | Read + Write | 
 *    ms between measurements, -1: stop reading, 0: update when changes
 *
 * Temperature service    0100
 *  - Temperature         0101 | float    | Read + Notify | degree in Celsius
 *  - Measurement Period  0001
 *
 * Accelerometer service  0200
 *  - Accel Data          0201 | float (x, y, z) | Read + Notify | accel x, y, z
 *  - Measurement Period  0001
 *
 * Light sensor service   0300
 *  - Lux Data            0301 | uint16_t | Read + Notify
 *  - Measurement Period  0001
 *
 * Button service         0600
 *  - Pressed             0601 | uint32_t | Read + Notify | slide sw (b2), button B (b1), button A (b0)
 *  - Measurement Period  0001
 *
 * Tone Service           0C00
 *  - Frequency           0C01 | uint16_t | frequency in Hz
 *  - Duration            0C01 |
 * 
 * Sound sensor service   0400
 *  - Sound Data          0401 | int16_t  | Read + Notify
 *  - Measurement Period  0001
 *
 * Captouch service       0500
 *  - Sensitivity         0501 | uint32_t | difference that Capn should report immediately
 *  - Cap0                0510 | int32_t  | Read + Notify
 *  - .........................
 *  - Cap7                0517 | int32_t  | Read + Notify
 *  - Measurement Period  0001 | uint32_t | Read + Write
 *
 *
 * PIN I/O service        0700
 *  - Pin Dir             0701 | uint64_t | Read + Write | bit 1 is In, 0 is Out
 *  - Pin Data            0702 | uint64_t | Read + Write |
 *  - PWM Control         0710 | struct { uint8_t pin, uint16_t value, uint32_t period_ms} | as microbit, value is 0-1024 for duty cycle
 *
 * PIN Analog             0800
 *  - A0                  0810 | uint16_t | Read + Notify
 *    .........................
 *  - A7                  0817 | uint16_t | Read + Notify
 *  - Measurement Period  0001 | uint32_t | Read + Write
 *
 * Neopixel Service       0900
 *   - Pixel Pin          0901 | uint8_t  | Read + Write
 *   - Pixel Count        0902 | uint16_t | Read + Write
 *   - Pixel Type         0903 | uint16_t | Read + Write | NEO_RGB, NEO_GRB etc ..
 *   - Pixel Data         0904 | RGB array| Write
 *
 * Gamepad Service        0A00
 *   - Gamepad Button     0A01 | uint16_t  | Write
 *   - Left XY            0A02 | int8_t[2] | Write
 *   - Right XY           0A03 | int8_t[2] | Write
 *
 * Image Service          0B00
 *    - Format            0B01 | uint16_t[3] | Write | width + height + type, type is enum value e.g RGB_655, RGB_888, JPG, GIF etc ...
 *    - Data              0B02 | pixel[]     | Write | will save to flash as `default_image`, and auto load on reset ?
 *    - Fill              0B03 | uint8_t[3]  | Write | Fill with solid color
 *    - Load File         0B04 | utf8_t      | Write | Load image from qspi flash ?
 */

 
 
 
 {
    "_comment": {
        "comment": [
            "Add UUIDs for your services, characteristics, and descriptors in this file.",
            "The format is the UUID of the item, followed by an object containing the data.",
            "'name' is a mandatory handle, while 'format' is optional.",
            "Currently the only supported format is 'TEXT', default is 'NO_FORMAT'.",
            "The application must be reloaded to access changes in this file."
        ]
    },
    "uuid16bitServiceDefinitions": {
        "180D": {
            "name": "Heart Rate"
        }
    },
    "uuid16bitCharacteristicDefinitions": {
        "2A37": {
            "name": "Heart Rate Measurement"
        },
        "2A29": {
            "name": "Manufacturer Name String",
            "format": "TEXT"
        }
    },
    "uuid16bitDescriptorDefinitions": {},
    "uuid128bitServiceDefinitions": {
        "6E400001B5A3F393E0A9E50E24DCCA9E": {
            "name": "UART over BLE"
        },

        "ADAF0100C33242A893BD25E905756CB8": { "name": "Adafruit Temperature"      },
        "ADAF0200C33242A893BD25E905756CB8": { "name": "Adafruit Accelerometer"    },
        "ADAF0300C33242A893BD25E905756CB8": { "name": "Adafruit Light"            },
        
        "ADAF0400C33242A893BD25E905756CB8": { "name": "Adafruit Sound"            },
        "ADAF0500C33242A893BD25E905756CB8": { "name": "Adafruit Capacitive Touch" },
        "ADAF0600C33242A893BD25E905756CB8": { "name": "Adafruit Buttons"          }
        
        "ADAF0700C33242A893BD25E905756CB8": { "name": "Adafruit Pin DIO"          },
        "ADAF0800C33242A893BD25E905756CB8": { "name": "Adafruit Pin Analog"       },
        "ADAF0900C33242A893BD25E905756CB8": { "name": "Adafruit RGB Pixel"        }
        
        "ADAF0A00C33242A893BD25E905756CB8": { "name": "Adafruit Gamepad"          },
        "ADAF0B00C33242A893BD25E905756CB8": { "name": "Adafruit Image"            },
        "ADAF0C00C33242A893BD25E905756CB8": { "name": "Adafruit Tone"             }
        
                                                                                  },
    "uuid128bitCharacteristicDefinitions": {
        "6E400002B5A3F393E0A9E50E24DCCA9E": { "name": "UART RX"                   },
        "6E400003B5A3F393E0A9E50E24DCCA9E": { "name": "UART TX"                   },

        "ADAF0001C33242A893BD25E905756CB8": { "name": "Measurement Period"        },
        "ADAF0101C33242A893BD25E905756CB8": { "name": "Temperature"               },
        "ADAF0201C33242A893BD25E905756CB8": { "name": "Accelerometer"             },
        "ADAF0301C33242A893BD25E905756CB8": { "name": "Lux"                       }
    },
    "uuid128bitDescriptorDefinitions": {}
}
